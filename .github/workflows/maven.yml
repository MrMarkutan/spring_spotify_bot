## This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven
#
## This workflow uses actions that are not certified by GitHub.
## They are provided by a third-party and are governed by
## separate terms of service, privacy policy, and support
## documentation.
#
name: Spring Spotify Bot
#
#on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'oracle'
#          cache: maven
#
#      - name: Build JAR file
#        run: mvn clean package --quiet
#
#      - name: Build and push
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/github_action:latest
#          build-args: |
#            JAR_FILE=target/*.jar
#name: Build and Deploy

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: github_action
  TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'
          cache: maven

      - name: Build with Maven
        run: mvn package -DskipTests

      - name: Run Maven tests
        run: mvn test

      - name: Image Name
        run: echo $IMAGE_NAME:$TAG

#      - name: Build Docker image
#        run: docker build --build-arg JAR_FILE=target/*.jar -t $IMAGE_NAME .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$TAG
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/github_action:latest
          build-args: |
            JAR_FILE=target/*.jar
